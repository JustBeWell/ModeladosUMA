reset

--=============================================================================
--                               OBJETOS
--=============================================================================
!new Clock('Clock')               -- Solo puede existir una única instancia
!Clock.NOW := 1000                  -- Día actual
!Clock.resolution := 1            -- Saltos cada tick


!new Coche('Coche1')
!Coche1.fechaMatriculacion := 1   -- Día en el que el coche comenzó a existir en el sistema

!new Ciudad('Ciudad1')
!Ciudad1.nombre := 'Malaga'

!new Ciudad('Ciudad2')
!Ciudad2.nombre := 'Cadiz'

!new Ciudad('Ciudad3')
!Ciudad3.nombre := 'Barcelona'




!new Revision('Revision1')
!Revision1.tipo := #Reparacion   -- Hay que declararlo con # por que cada item de la enumeration es un número
!Revision1.fechaInicio := 16
!Revision1.fechaFin := 19


!new Oficial('TOficial1')
!TOficial1.garantia := 2







--=============================================================================
--                               INSERTS
--=============================================================================

-- Modelamos para un caso en particular donde no hay paso del tiempo ni cambio de estado

!insert(Coche1, Ciudad1) into estaEn     -- coche1 esta en Málaga y va a realizar un viaje a Cádiz:


-- Se crean los recorridos entre las ciudades: (destino, origen)

!insert(Ciudad2, Ciudad1) into Recorrido -- y estos son los km que recorrió en dicho viaje entre Málaga->Cádiz
!Recorrido1.distancia := 300 
!insert(Ciudad3, Ciudad2) into Recorrido -- y estos son los km que recorrió en dicho viaje entre Málaga->Cádiz
!Recorrido2.distancia := 400   
!insert(Ciudad1, Ciudad3) into Recorrido -- y estos son los km que recorrió en dicho viaje entre Málaga->Cádiz
!Recorrido3.distancia := 500 



--!insert(Coche2, Viaje2) into realiza     -- coche2 ya realizó el viaje,
!insert(Ciudad1, TOficial1) into existeOficial

!insert(TOficial1, Revision1) into esRealizada

-- Relaacionamos cada ActiveObject con el clock
!insert(Clock, Coche1) into time
